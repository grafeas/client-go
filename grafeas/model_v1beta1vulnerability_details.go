/*
 * grafeas.proto
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: version not set
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package grafeas

// Details of a vulnerability Occurrence.
type V1beta1vulnerabilityDetails struct {
	Type_ string `json:"type,omitempty"`
	// Output only. The note provider assigned Severity of the vulnerability.
	Severity *VulnerabilitySeverity `json:"severity,omitempty"`
	// Output only. The CVSS score of this vulnerability. CVSS score is on a scale of 0-10 where 0 indicates low severity and 10 indicates high severity.
	CvssScore float32 `json:"cvssScore,omitempty"`
	// Required. The set of affected locations and their fixes (if available) within the associated resource.
	PackageIssue []VulnerabilityPackageIssue `json:"packageIssue,omitempty"`
	// Output only. A one sentence description of this vulnerability.
	ShortDescription string `json:"shortDescription,omitempty"`
	// Output only. A detailed description of this vulnerability.
	LongDescription string `json:"longDescription,omitempty"`
	// Output only. URLs related to this vulnerability.
	RelatedUrls []V1beta1RelatedUrl `json:"relatedUrls,omitempty"`
	// The distro assigned severity for this vulnerability when it is available, and note provider assigned severity when distro has not yet assigned a severity for this vulnerability.  When there are multiple PackageIssues for this vulnerability, they can have different effective severities because some might be provided by the distro while others are provided by the language ecosystem for a language pack. For this reason, it is advised to use the effective severity on the PackageIssue level. In the case where multiple PackageIssues have differing effective severities, this field should be the highest severity for any of the PackageIssues.
	EffectiveSeverity *VulnerabilitySeverity `json:"effectiveSeverity,omitempty"`
	// Output only. CVSS version used to populate cvss_score and severity.
	CvssVersion *VulnerabilityCvssVersion `json:"cvssVersion,omitempty"`
	VexAssessment *DetailsVexAssessment `json:"vexAssessment,omitempty"`
	// The cvss v2 score for the vulnerability.
	CvssV2 *VulnerabilityCvss `json:"cvssV2,omitempty"`
	// The cvss v3 score for the vulnerability.
	CvssV3 *VulnerabilityCvss `json:"cvssV3,omitempty"`
}
